AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  SAM template for provisioning the following resources:
    - Lambda APIs
    - API Gateway

#    ___                               _
#   / _ \__ _ _ __ __ _ _ __ ___   ___| |_ ___ _ __ ___
#  / /_)/ _` | '__/ _` | '_ ` _ \ / _ \ __/ _ \ '__/ __|
# / ___/ (_| | | | (_| | | | | | |  __/ ||  __/ |  \__ \
# \/    \__,_|_|  \__,_|_| |_| |_|\___|\__\___|_|  |___/
#

Parameters:
  Environment:
    Type: String
    Description: "Environment code of deployment (dev, uat, prod)"
    AllowedPattern: ".+"
    AllowedValues:
      - "dev"
      - "uat"
      - "prod"

  AppName:
    Type: String
    Description: "Name of application"
    Default: "ninja-factions"
#  ____
# |  _ \ ___  ___  ___  _   _ _ __ ___ ___  ___
# | |_) / _ \/ __|/ _ \| | | | '__/ __/ _ \/ __|
# |  _ <  __/\__ \ (_) | |_| | | | (_|  __/\__ \
# |_| \_\___||___/\___/ \__,_|_|  \___\___||___/
#

Resources:
  #    ___      _
  #   / _ \__ _| |_ _____      ____ _ _   _
  #  / /_\/ _` | __/ _ \ \ /\ / / _` | | | |
  # / /_\\ (_| | ||  __/\ V  V / (_| | |_| |
  # \____/\__,_|\__\___| \_/\_/ \__,_|\__, |
  #                                   |___/
  FactionsApiGateway:
    Type: "AWS::Serverless::Api"
    Properties:
      StageName: "v1"
      Cors: "'*'"
      Auth:
        ApiKeyRequired: true
      GatewayResponses:
        UNAUTHORIZED:
          StatusCode: 401
          ResponseParameters:
            Headers:
              Access-Control-Expose-Headers: "'WWW-Authenticate'"
              Access-Control-Allow-Origin: "'*'"
              WWW-Authenticate: >-
                'Bearer realm="admin"'

  FactionsApiKey:
    Type: AWS::ApiGateway::ApiKey
    DependsOn: FactionsApiGateway
    Properties:
      Name: !Join ["-", [!Ref AWS::StackName, "-api-key"]]
      Description: "API key used for invoking factions api gateway"
      Enabled: true
      GenerateDistinctId: false
      StageKeys:
        - RestApiId: !Ref FactionsApiGateway
          StageName: !Ref FactionsApiGateway.Stage

  FactionsUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn: FactionsApiGateway
    Properties:
      ApiStages:
        - ApiId: !Ref FactionsApiGateway
          Stage: !Ref FactionsApiGateway.Stage
      Description: !Join [" ", [!Ref AWS::StackName, "usage plan"]]
      Quota:
        Limit: 10000
        Period: MONTH
      Throttle:
        BurstLimit: 1000
        RateLimit: 1000
      UsagePlanName: !Join ["-", [!Ref AWS::StackName, "usage-plan"]]

  FactionsApiUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    DependsOn: FactionsUsagePlan
    Properties:
      KeyId: !Ref FactionsApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref FactionsUsagePlan

  #    _      ___ _____
  #   /_\    / _ \\_   \___
  #  //_\\  / /_)/ / /\/ __|
  # /  _  \/ ___/\/ /_ \__ \
  # \_/ \_/\/   \____/ |___/

  ApiGetWhites:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Join ["-", [!Ref Environment, !Ref AppName, "get-whites"]]
      CodeUri: white-ninja-get-list/
      Handler: app.execute
      Timeout: 30 # Seconds
      Runtime: nodejs10.x
      MemorySize: 512
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Join ["-", [!Ref Environment, !Ref AppName, "whites"]]
      Environment:
        Variables:
          API_NAME: "REST API - Get Whites"
          ENVIRONMENT: !Ref Environment
          WHITES_TABLE: !Join ["-", [!Ref Environment, !Ref AppName, "whites"]]
      Events:
        GetResource:
          Type: "Api"
          Properties:
            RestApiId: !Ref FactionsApiGateway
            Path: "/ninja/whites"
            Method: "GET"
            Auth:
              ApiKeyRequired: true
        Options:
          Type: "Api"
          Properties:
            RestApiId: !Ref FactionsApiGateway
            Path: "/ninja/whites"
            Method: OPTIONS
            Auth:
              ApiKeyRequired: false
      Tags:
        APP_NAME: !Ref AppName
        ENVIRONMENT: !Ref Environment

  ApiGetReds:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Join ["-", [!Ref Environment, !Ref AppName, "get-reds"]]
      CodeUri: red-ninja-get-list/
      Handler: app.execute
      Timeout: 30 # Seconds
      Runtime: nodejs10.x
      MemorySize: 512
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Join ["-", [!Ref Environment, !Ref AppName, "reds"]]
      Environment:
        Variables:
          API_NAME: "REST API - Get Reds"
          ENVIRONMENT: !Ref Environment
          REDS_TABLE: !Join ["-", [!Ref Environment, !Ref AppName, "reds"]]
      Events:
        GetResource:
          Type: "Api"
          Properties:
            RestApiId: !Ref FactionsApiGateway
            Path: "/ninja/reds"
            Method: "GET"
            Auth:
              ApiKeyRequired: true
        Options:
          Type: "Api"
          Properties:
            RestApiId: !Ref FactionsApiGateway
            Path: "/ninja/reds"
            Method: OPTIONS
            Auth:
              ApiKeyRequired: false
      Tags:
        APP_NAME: !Ref AppName
        ENVIRONMENT: !Ref Environment
